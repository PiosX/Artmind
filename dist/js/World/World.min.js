function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _classCallCheck(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,r){for(var t=0;t<r.length;t++){var o=r[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,_toPropertyKey(o.key),o)}}function _createClass(e,r,t){return r&&_defineProperties(e.prototype,r),t&&_defineProperties(e,t),Object.defineProperty(e,"prototype",{writable:!1}),e}function _toPropertyKey(e){e=_toPrimitive(e,"string");return"symbol"===_typeof(e)?e:String(e)}function _toPrimitive(e,r){if("object"!==_typeof(e)||null===e)return e;var t=e[Symbol.toPrimitive];if(void 0===t)return("string"===r?String:Number)(e);t=t.call(e,r||"default");if("object"!==_typeof(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}import{Vector2}from"../../../../node_modules/three/build/three.module.js";import{createCamera}from"./components/camera.min.js";import{createCube}from"./components/cube.min.js";import{createScene}from"./components/scene.min.js";import{createControls}from"./systems/controls.min.js";import{createRenderer}from"./systems/renderer.min.js";import{Resizer}from"./systems/Resizer.min.js";import{Loop}from"./systems/Loop.min.js";var renderer,scene,loop,mouse=new Vector2,target=new Vector2,windowHalf=new Vector2(window.innerWidth/2,window.innerHeight/2),camera=createCamera(),cube=createCube(),World=function(){function t(e){_classCallCheck(this,t),renderer=createRenderer(),scene=createScene(),loop=new Loop(camera,scene,renderer),e.append(renderer.domElement);var r=createControls(camera,renderer.domElement);loop.updatables.push(r),this.mouse=new Vector2,this.target=new Vector2,this.windowHalf=new Vector2(window.innerWidth/2,window.innerHeight/2),cube.groups.forEach(function(e){loop.updatables.push(target,e),target.tick=function(){target.x=15e-5*(1-mouse.x),target.y=14e-5*(-500-mouse.y)},e.tick=function(){e.rotation.x+=.05*(target.y-e.rotation.x),e.rotation.y+=.05*(target.x-e.rotation.y)},scene.add(e)}),document.addEventListener("mousemove",this.onMouseMove,!1),new Resizer(e,camera,renderer)}return _createClass(t,[{key:"initPost",value:function(){this.composer=new EffectComposer(renderer)}},{key:"onMouseMove",value:function(e){mouse.x=e.clientX-windowHalf.x,mouse.y=e.clientY-windowHalf.x}},{key:"animate",value:function(){requestAnimationFrame(this.render)}},{key:"render",value:function(){renderer.render(scene,camera)}},{key:"start",value:function(){loop.start()}},{key:"stop",value:function(){loop.stop()}}]),t}();export{World};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIldvcmxkL1dvcmxkLmpzIl0sIm5hbWVzIjpbIlZlY3RvcjIiLCJjcmVhdGVDYW1lcmEiLCJjcmVhdGVDdWJlIiwiY3JlYXRlU2NlbmUiLCJjcmVhdGVDb250cm9scyIsInJlbmRlcmVyIiwic2NlbmUiLCJsb29wIiwid2luZG93IiwiaW5uZXJXaWR0aCIsImlubmVySGVpZ2h0IiwibW91c2UiLCJ0YXJnZXQiLCJjYW1lcmEiLCJXb3JsZCIsIl9jbGFzc0NhbGxDaGVjayIsInRoaXMiLCJjcmVhdGVSZW5kZXJlciIsImNvbnRhaW5lciIsIkxvb3AiLCJhcHBlbmQiLCJjb250cm9scyIsImRvbUVsZW1lbnQiLCJ1cGRhdGFibGVzIiwid2luZG93SGFsZiIsImdyb3VwcyIsImN1YmUiLCJ0aWNrIiwiaXRlbSIsInB1c2giLCJ4Iiwicm90YXRpb24iLCJ5IiwiYWRkIiwiZG9jdW1lbnQiLCJhZGRFdmVudExpc3RlbmVyIiwib25Nb3VzZU1vdmUiLCJjb21wb3NlciIsIlJlc2l6ZXIiLCJFZmZlY3RDb21wb3NlciIsIl9jcmVhdGVDbGFzcyIsImtleSIsInZhbHVlIiwiZXZlbnQiLCJjbGllbnRYIiwiY2xpZW50WSIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsInJlbmRlciIsInN0YXJ0Iiwic3RvcCJdLCJtYXBwaW5ncyI6InFqQ0FBU0EsT0FBcUUsS0FBdEQsOERBQ2ZDLFlBQWdELEtBQTVCLG9DQUNwQkMsVUFBNEMsS0FBMUIsa0NBQ2xCQyxXQUE4QyxLQUEzQixtQ0FFbkJDLGNBQWlELEtBQTNCLG1DQUx0QkosY0FBZSxLQUFBLG1DQUNmQyxPQUFvQixLQUFSLGtDQUNaQyxJQUFrQixLQUFSLHdCQUduQixJQUFBRyxTQUNBQyxNQUNBQyxLQUdJRixNQUFRLElBQUFMLFFBQ1JNLE9BQUssSUFBQU4sUUFDTE8sV0FBSSxJQUFBUCxRQUFBUSxPQUFBQyxXQUFBLEVBQUFELE9BQUFFLFlBQUEsQ0FBQSxFQUVKQyxPQUFRVixhQUFhLEVBQ3JCVyxLQUFNVixXQUFPRixFQUViYSxNQUFNLFdBQ1YsU0FBQUMsRUFBV1osR0FBWWEsZ0JBQUFDLEtBQUFGLENBQUEsRUFBQ1QsU0FFYlksZUFBQSxFQUNWWCxNQUFBSCxZQUFZZSxFQUdYWCxLQUhzQixJQUFBWSxLQUFBTixPQUFBUCxNQUFBRCxRQUFBLEVBSXRCYSxFQUhRRSxPQUFHSCxTQUFBQSxVQUFnQixFQUszQixJQUhJSSxFQUFXakIsZUFBY1MsT0FBRVIsU0FBU2lCLFVBQUEsRUFJeENmLEtBSEFXLFdBQVVFLEtBQU9mLENBQVNpQixFQUsxQk4sS0FGQVQsTUFBS2dCLElBQVV2QixRQUdmZ0IsS0FEQUosT0FBVSxJQUFHWixRQUViZ0IsS0FEQVEsV0FBYyxJQUFJeEIsUUFFakJRLE9BRElnQixXQUFhLEVBRWpCaEIsT0FFSWlCLFlBQWUsQ0FBQSxFQUFwQkMsS0FHQ2QsT0FBT2UsUUFBTyxTQUFBQyxHQUZkckIsS0FHQ0ssV0FBV2lCLEtBQUtsQixPQUFPaUIsQ0FBSSxFQUQ1QmhCLE9BR0NlLEtBQUEsV0FGQWYsT0FHSWUsRUFBYSxPQUFULEVBQUdoQixNQUFBbUIsR0FGWGxCLE9BR0FnQixFQUF1QixPQUFsQkcsQ0FBQUEsSUFBVXBCLE1BQUlxQixFQUZwQixFQUNBSixFQUdDRCxLQUFBLFdBRkFDLEVBSUR0QixTQUFVc0IsR0FBSyxLQUFBaEIsT0FBQW9CLEVBQUFKLEVBQUFHLFNBQUFELEdBQ2hCRixFQUFFRyxTQUFBQyxHQUFBLEtBQUFwQixPQUFBa0IsRUFBQUYsRUFBQUcsU0FBQUMsRUFIRCxFQUVBMUIsTUFBTTJCLElBQUlMLENBQUksQ0FDZixDQUFDLEVBSURNLFNBR0FDLGlCQUFBLFlBQUFuQixLQUFBb0IsWUFBQSxDQUFBLENBQUEsRUFHS0MsSUFBV0MsUUFBSUMsRUFBZWxDLE9BQVFBLFFBQUMsQ0FIN0MsQ0EwQkMsT0ExQkFtQyxhQUFBMUIsRUFBQSxDQUFBLENBQUEyQixJQUFBLFdBQUFDLE1BRUQsV0FDQzFCLEtBQ0FxQixTQUVELElBQUFFLGVBQWlCbEMsUUFBRSxDQUZuQixDQUFDLEVBQUEsQ0FBQW9DLElBQUEsY0FBQUMsTUFFRCxTQUdBQyxHQUFDaEMsTUFBQW1CLEVBQUFhLEVBQUFDLFFBQUFwQixXQUFBTSxFQURBbkIsTUFDQXFCLEVBQUFXLEVBQUFFLFFBQUFyQixXQUFBTSxDQUFELENBQUMsRUFBQSxDQUFBVyxJQUFBLFVBQUFDLE1BRUQsV0FFQ0ksc0JBQUE5QixLQUFBK0IsTUFBQSxDQUFELENBQUMsRUFBQSxDQUFBTixJQUFBLFNBQUFDLE1BRUQsV0FFQ3JDLFNBQ0QwQyxPQUFBekMsTUFBQU8sTUFBQSxDQUFBLENBQUMsRUFBQSxDQUFBNEIsSUFBQSxRQUFBQyxNQUVELFdBQ0NuQyxLQUFBQSxNQUFLeUMsQ0FDTixDQUFDLEVBQUEsQ0FBQVAsSUFBQSxPQUFBQyxNQUVELFdBQ0NuQyxLQUhBMEMsS0FFRCxDQUVBLENBQUMsRUFBQSxFQUFBbkMsQ0FBQSxFQUFBLFNBQUFBLEtBQUEiLCJmaWxlIjoiV29ybGQvV29ybGQubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVmVjdG9yMiB9IGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdGhyZWUvYnVpbGQvdGhyZWUubW9kdWxlLmpzXCI7XHJcbmltcG9ydCB7IGNyZWF0ZUNhbWVyYSB9IGZyb20gXCIuL2NvbXBvbmVudHMvY2FtZXJhLm1pbi5qc1wiO1xyXG5pbXBvcnQgeyBjcmVhdGVDdWJlIH0gZnJvbSBcIi4vY29tcG9uZW50cy9jdWJlLm1pbi5qc1wiO1xyXG5pbXBvcnQgeyBjcmVhdGVTY2VuZSB9IGZyb20gXCIuL2NvbXBvbmVudHMvc2NlbmUubWluLmpzXCI7XHJcblxyXG5pbXBvcnQgeyBjcmVhdGVDb250cm9scyB9IGZyb20gXCIuL3N5c3RlbXMvY29udHJvbHMubWluLmpzXCI7XHJcbmltcG9ydCB7IGNyZWF0ZVJlbmRlcmVyIH0gZnJvbSBcIi4vc3lzdGVtcy9yZW5kZXJlci5taW4uanNcIjtcclxuaW1wb3J0IHsgUmVzaXplciB9IGZyb20gXCIuL3N5c3RlbXMvUmVzaXplci5taW4uanNcIjtcclxuaW1wb3J0IHsgTG9vcCB9IGZyb20gXCIuL3N5c3RlbXMvTG9vcC5taW4uanNcIjtcclxuXHJcbmxldCByZW5kZXJlcjtcclxubGV0IHNjZW5lO1xyXG5sZXQgbG9vcDtcclxuXHJcbmxldCBtb3VzZSA9IG5ldyBWZWN0b3IyKCk7XHJcbmxldCB0YXJnZXQgPSBuZXcgVmVjdG9yMigpO1xyXG5sZXQgd2luZG93SGFsZiA9IG5ldyBWZWN0b3IyKHdpbmRvdy5pbm5lcldpZHRoIC8gMiwgd2luZG93LmlubmVySGVpZ2h0IC8gMik7XHJcbmxldCBjYW1lcmEgPSBjcmVhdGVDYW1lcmEoKTtcclxubGV0IGN1YmUgPSBjcmVhdGVDdWJlKCk7XHJcblxyXG5jbGFzcyBXb3JsZCB7XHJcblx0Y29uc3RydWN0b3IoY29udGFpbmVyKSB7XHJcblx0XHRyZW5kZXJlciA9IGNyZWF0ZVJlbmRlcmVyKCk7XHJcblx0XHRzY2VuZSA9IGNyZWF0ZVNjZW5lKCk7XHJcblx0XHRsb29wID0gbmV3IExvb3AoY2FtZXJhLCBzY2VuZSwgcmVuZGVyZXIpO1xyXG5cdFx0Y29udGFpbmVyLmFwcGVuZChyZW5kZXJlci5kb21FbGVtZW50KTtcclxuXHJcblx0XHRjb25zdCBjb250cm9scyA9IGNyZWF0ZUNvbnRyb2xzKGNhbWVyYSwgcmVuZGVyZXIuZG9tRWxlbWVudCk7XHJcblx0XHRsb29wLnVwZGF0YWJsZXMucHVzaChjb250cm9scyk7XHJcblxyXG5cdFx0dGhpcy5tb3VzZSA9IG5ldyBWZWN0b3IyKCk7XHJcblx0XHR0aGlzLnRhcmdldCA9IG5ldyBWZWN0b3IyKCk7XHJcblx0XHR0aGlzLndpbmRvd0hhbGYgPSBuZXcgVmVjdG9yMihcclxuXHRcdFx0d2luZG93LmlubmVyV2lkdGggLyAyLFxyXG5cdFx0XHR3aW5kb3cuaW5uZXJIZWlnaHQgLyAyXHJcblx0XHQpO1xyXG5cdFx0Y3ViZS5ncm91cHMuZm9yRWFjaCgoaXRlbSkgPT4ge1xyXG5cdFx0XHRsb29wLnVwZGF0YWJsZXMucHVzaCh0YXJnZXQsIGl0ZW0pO1xyXG5cclxuXHRcdFx0dGFyZ2V0LnRpY2sgPSAoKSA9PiB7XHJcblx0XHRcdFx0dGFyZ2V0LnggPSAoMSAtIG1vdXNlLngpICogMC4wMDAxNTtcclxuXHRcdFx0XHR0YXJnZXQueSA9ICgtNTAwIC0gbW91c2UueSkgKiAwLjAwMDE0O1xyXG5cdFx0XHR9O1xyXG5cdFx0XHRpdGVtLnRpY2sgPSAoKSA9PiB7XHJcblx0XHRcdFx0aXRlbS5yb3RhdGlvbi54ICs9IDAuMDUgKiAodGFyZ2V0LnkgLSBpdGVtLnJvdGF0aW9uLngpO1xyXG5cdFx0XHRcdGl0ZW0ucm90YXRpb24ueSArPSAwLjA1ICogKHRhcmdldC54IC0gaXRlbS5yb3RhdGlvbi55KTtcclxuXHRcdFx0fTtcclxuXHJcblx0XHRcdHNjZW5lLmFkZChpdGVtKTtcclxuXHRcdH0pO1xyXG5cdFx0Ly8gc2NlbmUuYWRkKGN1YmUuZ3JvdXBzWzBdKTtcclxuXHRcdC8vIHNjZW5lLmFkZChjdWJlLmdyb3Vwc1sxXSk7XHJcblxyXG5cdFx0ZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlbW92ZVwiLCB0aGlzLm9uTW91c2VNb3ZlLCBmYWxzZSk7XHJcblxyXG5cdFx0Y29uc3QgcmVzaXplciA9IG5ldyBSZXNpemVyKGNvbnRhaW5lciwgY2FtZXJhLCByZW5kZXJlcik7XHJcblx0fVxyXG5cclxuXHRpbml0UG9zdCgpIHtcclxuXHRcdHRoaXMuY29tcG9zZXIgPSBuZXcgRWZmZWN0Q29tcG9zZXIocmVuZGVyZXIpO1xyXG5cdH1cclxuXHJcblx0b25Nb3VzZU1vdmUoZXZlbnQpIHtcclxuXHRcdG1vdXNlLnggPSBldmVudC5jbGllbnRYIC0gd2luZG93SGFsZi54O1xyXG5cdFx0bW91c2UueSA9IGV2ZW50LmNsaWVudFkgLSB3aW5kb3dIYWxmLng7XHJcblx0fVxyXG5cclxuXHRhbmltYXRlKCkge1xyXG5cdFx0cmVxdWVzdEFuaW1hdGlvbkZyYW1lKHRoaXMucmVuZGVyKTtcclxuXHR9XHJcblxyXG5cdHJlbmRlcigpIHtcclxuXHRcdC8vIGRyYXcgYSBzaW5nbGUgZnJhbWVcclxuXHRcdHJlbmRlcmVyLnJlbmRlcihzY2VuZSwgY2FtZXJhKTtcclxuXHR9XHJcblxyXG5cdHN0YXJ0KCkge1xyXG5cdFx0bG9vcC5zdGFydCgpO1xyXG5cdH1cclxuXHJcblx0c3RvcCgpIHtcclxuXHRcdGxvb3Auc3RvcCgpO1xyXG5cdH1cclxufVxyXG5cclxuZXhwb3J0IHsgV29ybGQgfTtcclxuIl19
