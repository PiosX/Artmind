import{Group,Mesh,MeshBasicMaterial,PlaneGeometry,TextureLoader}from"../../../../node_modules/three/build/three.module.js";import{EffectComposer}from"https://cdn.skypack.dev/three@0.128.0/examples/jsm/postprocessing/EffectComposer.js";import{RenderPass}from"https://cdn.skypack.dev/three@0.128.0/examples/jsm/postprocessing/RenderPass.js";import{ShaderPass}from"https://cdn.skypack.dev/three@0.128.0/examples/jsm/postprocessing/ShaderPass.js";function createCube(){var e=["https://images.prismic.io/miart/cb52f3b6-14a4-4406-9e2e-b0f03e032c88_v4-min.png?auto=compress,format","https://images.prismic.io/miart/833582e4-f0dc-43d1-b4ab-6bc06d93fd4a_v9-min.png?auto=compress,format"],o=(new TextureLoader).load("https://images.prismic.io/miart/7dadf32d-3571-4822-8c56-421921ae94b2_mask.jpg?auto=compress,format"),e=e.map(function(e){return(new TextureLoader).load(e)}),p=new PlaneGeometry(1920,1280,1,1),m=[];return e.forEach(function(e,s){var r=new Group;m.push(r);for(var a=0;a<3;a++){var t=new MeshBasicMaterial({map:e}),t=(0<a&&(t=new MeshBasicMaterial({map:e,alphaMap:o,transparent:!0})),new Mesh(p,t));t.position.z=100*(a+1),r.add(t),r.position.x=2500*s}}),{groups:m}}export{createCube};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIldvcmxkL2NvbXBvbmVudHMvY3ViZS5qcyJdLCJuYW1lcyI6WyJHcm91cCIsIk1lc2giLCJNZXNoQmFzaWNNYXRlcmlhbCIsIlBsYW5lR2VvbWV0cnkiLCJUZXh0dXJlTG9hZGVyIiwibWFza1RleHR1cmUiLCJ0ZXh0dXJlcyIsIlJlbmRlclBhc3MiLCJTaGFkZXJQYXNzIiwiZ3JvdXBzIiwiZm9yRWFjaCIsInQiLCJtYXAiLCJsb2FkIiwiZ2VvbWV0cnkiLCJhbHBoYU1hcCIsInRyYW5zcGFyZW50IiwiaiIsImdyb3VwIiwicHVzaCIsIm1lc2giLCJpIiwicG9zaXRpb24iLCJtYXRlcmlhbCIsInoiLCJhZGQiLCJ4IiwiY3JlYXRlQ3ViZSJdLCJtYXBwaW5ncyI6Ik9BT0FBLE1BQ0FDLEtBQ0FDLGtCQUVBQyxjQU5DQyxhQVlDLEtBREdDLDhEQUdKQyxjQUEwQixLQUFGLDZGQUFFQyxVQUFnQyxLQUF2QkgseUZBQXdCSSxVQUFBLEtBQUEsa0ZBUjVELFNBV0tDLGFBVkosSUFXQUgsRUFBU0ksQ0FWUix1R0FDQSx3R0FFR0wsR0FXVSxJQUFHRCxlQUFJRixLQVZwQixvR0FVNkNTLEVBUjlDTCxFQVVPQSxFQUFNTSxJQUFBLFNBQUFELEdBQUEsT0FBQSxJQUFBUCxlQUFBUyxLQUFBRixDQUFBLENBQUEsQ0FBQSxFQVJQRyxFQVVJLElBQUFYLGNBQUEsS0FBQSxLQUFBLEVBQUEsQ0FBQSxFQVROTSxFQVVBTSxHQWFKLE9BdEJBVCxFQVVJVSxRQUFBQSxTQUFBQSxFQUFXQyxHQVRkLElBQUlDLEVBVUEsSUFBQWxCLE1BVEpTLEVBVUNVLEtBQUFELENBQUEsRUFURCxJQVdDLElBQUlFLEVBQUksRUFBR0MsRUFBSXBCLEVBQUlvQixDQUFDUCxHQUFBQSxDQVZwQixJQVdBTSxFQUFLRSxJQUFVcEIsa0JBQWdCLENBQUFVLElBQUFELENBQUEsQ0FBQSxFQUQzQlMsR0FJQyxFQUFMRixJQUNESyxFQUFBLElBQUFyQixrQkFBQSxDQUNDVSxJQUFBRCxFQUVGSSxTQUFPVixFQUFFSSxZQUFBQSxDQUFBQSxDQUFRLENBQUEsR0FSSixJQUFJUixLQUFLYSxFQUFVUyxDQUFRLEdBQ3RDSCxFQUFLRSxTQUFTRSxFQUFjLEtBQVRILEVBQUksR0FFdkJILEVBQU1PLElBQUlMLENBQUksRUFDZEYsRUFBTUksU0FBU0ksRUFBUSxLQUFKVCxDQUNwQixDQUNELENBQUMsRUFFTSxDQUFFUixPQUFBQSxDQUFPLENBQ2pCLFFBRVNrQixVQUFVIiwiZmlsZSI6IldvcmxkL2NvbXBvbmVudHMvY3ViZS5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xyXG5cdEdyb3VwLFxyXG5cdE1lc2gsXHJcblx0TWVzaEJhc2ljTWF0ZXJpYWwsXHJcblx0UGxhbmVHZW9tZXRyeSxcclxuXHRUZXh0dXJlTG9hZGVyLFxyXG59IGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdGhyZWUvYnVpbGQvdGhyZWUubW9kdWxlLmpzXCI7XHJcbmltcG9ydCB7IEVmZmVjdENvbXBvc2VyIH0gZnJvbSBcImh0dHBzOi8vY2RuLnNreXBhY2suZGV2L3RocmVlQDAuMTI4LjAvZXhhbXBsZXMvanNtL3Bvc3Rwcm9jZXNzaW5nL0VmZmVjdENvbXBvc2VyLmpzXCI7XHJcbmltcG9ydCB7IFJlbmRlclBhc3MgfSBmcm9tIFwiaHR0cHM6Ly9jZG4uc2t5cGFjay5kZXYvdGhyZWVAMC4xMjguMC9leGFtcGxlcy9qc20vcG9zdHByb2Nlc3NpbmcvUmVuZGVyUGFzcy5qc1wiO1xyXG5pbXBvcnQgeyBTaGFkZXJQYXNzIH0gZnJvbSBcImh0dHBzOi8vY2RuLnNreXBhY2suZGV2L3RocmVlQDAuMTI4LjAvZXhhbXBsZXMvanNtL3Bvc3Rwcm9jZXNzaW5nL1NoYWRlclBhc3MuanNcIjtcclxuXHJcbmZ1bmN0aW9uIGNyZWF0ZUN1YmUoKSB7XHJcblx0bGV0IHRleHR1cmVzID0gW1xyXG5cdFx0XCJodHRwczovL2ltYWdlcy5wcmlzbWljLmlvL21pYXJ0L2NiNTJmM2I2LTE0YTQtNDQwNi05ZTJlLWIwZjAzZTAzMmM4OF92NC1taW4ucG5nP2F1dG89Y29tcHJlc3MsZm9ybWF0XCIsXHJcblx0XHRcImh0dHBzOi8vaW1hZ2VzLnByaXNtaWMuaW8vbWlhcnQvODMzNTgyZTQtZjBkYy00M2QxLWI0YWItNmJjMDZkOTNmZDRhX3Y5LW1pbi5wbmc/YXV0bz1jb21wcmVzcyxmb3JtYXRcIixcclxuXHRdO1xyXG5cdGxldCBtYXNrVGV4dHVyZSA9IG5ldyBUZXh0dXJlTG9hZGVyKCkubG9hZChcclxuXHRcdFwiaHR0cHM6Ly9pbWFnZXMucHJpc21pYy5pby9taWFydC83ZGFkZjMyZC0zNTcxLTQ4MjItOGM1Ni00MjE5MjFhZTk0YjJfbWFzay5qcGc/YXV0bz1jb21wcmVzcyxmb3JtYXRcIlxyXG5cdCk7XHJcblx0dGV4dHVyZXMgPSB0ZXh0dXJlcy5tYXAoKHQpID0+IG5ldyBUZXh0dXJlTG9hZGVyKCkubG9hZCh0KSk7XHJcblxyXG5cdGNvbnN0IGdlb21ldHJ5ID0gbmV3IFBsYW5lR2VvbWV0cnkoMTkyMCwgMTI4MCwgMSwgMSk7XHJcblx0bGV0IGdyb3VwcyA9IFtdO1xyXG5cdHRleHR1cmVzLmZvckVhY2goKHQsIGopID0+IHtcclxuXHRcdGxldCBncm91cCA9IG5ldyBHcm91cCgpO1xyXG5cdFx0Z3JvdXBzLnB1c2goZ3JvdXApO1xyXG5cdFx0Zm9yIChsZXQgaSA9IDA7IGkgPCAzOyBpKyspIHtcclxuXHRcdFx0bGV0IG1hdGVyaWFsID0gbmV3IE1lc2hCYXNpY01hdGVyaWFsKHsgbWFwOiB0IH0pO1xyXG5cclxuXHRcdFx0aWYgKGkgPiAwKSB7XHJcblx0XHRcdFx0bWF0ZXJpYWwgPSBuZXcgTWVzaEJhc2ljTWF0ZXJpYWwoe1xyXG5cdFx0XHRcdFx0bWFwOiB0LFxyXG5cdFx0XHRcdFx0YWxwaGFNYXA6IG1hc2tUZXh0dXJlLFxyXG5cdFx0XHRcdFx0dHJhbnNwYXJlbnQ6IHRydWUsXHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdGxldCBtZXNoID0gbmV3IE1lc2goZ2VvbWV0cnksIG1hdGVyaWFsKTtcclxuXHRcdFx0bWVzaC5wb3NpdGlvbi56ID0gKGkgKyAxKSAqIDEwMDtcclxuXHJcblx0XHRcdGdyb3VwLmFkZChtZXNoKTtcclxuXHRcdFx0Z3JvdXAucG9zaXRpb24ueCA9IGogKiAyNTAwO1xyXG5cdFx0fVxyXG5cdH0pO1xyXG5cclxuXHRyZXR1cm4geyBncm91cHMgfTtcclxufVxyXG5cclxuZXhwb3J0IHsgY3JlYXRlQ3ViZSB9O1xyXG4iXX0=
